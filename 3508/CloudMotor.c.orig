#include "CloudMotor.h"
#include "can.h"
#include "Encoder.h"

CloudMotorPID GMYaw_Speedloop;
 int16_t CloudOut[2];
 
void CloudMotor_Configure(void)
{
		GMYaw_Speedloop.Kp = 85.0f;
    GMYaw_Speedloop.Ki = 0.0f;
    GMYaw_Speedloop.Kd = 10.0f;
    GMYaw_Speedloop.PoutMax = 5000.0f;
    GMYaw_Speedloop.IoutMax = 0.0f;
    GMYaw_Speedloop.DoutMax = 1000.0f;
    GMYaw_Speedloop.OutMax = 7000.0f;
    GMYaw_Speedloop.Set = 0.0f;
    GMYaw_Speedloop.Real = 0.0f;
    GMYaw_Speedloop.Out = 0.0f;
    GMYaw_Speedloop.err = 0.0f;
    GMYaw_Speedloop.err_last = 0.0f;
    GMYaw_Speedloop.err_llast = 0.0f;
    GMYaw_Speedloop.integral = 0.0f;


}
void CloudMotor_Ctrl(void)
{
		float Pout = 0.0f;
    float Iout = 0.0f;
    float Dout = 0.0f;
		GMYaw_Speedloop.Real = GMYawEncoder.filter_rate;

    GMYaw_Speedloop.err_last = GMYaw_Speedloop.err;
    GMYaw_Speedloop.err = GMYaw_Speedloop.Set - GMYaw_Speedloop.Real;
    GMYaw_Speedloop.integral += GMYaw_Speedloop.err;

    Pout = GMYaw_Speedloop.Kp * GMYaw_Speedloop.err;
    Pout = Pout < GMYaw_Speedloop.PoutMax ? Pout : GMYaw_Speedloop.PoutMax;
    Pout = Pout > -GMYaw_Speedloop.PoutMax ? Pout : -GMYaw_Speedloop.PoutMax;

    Iout = GMYaw_Speedloop.Ki * GMYaw_Speedloop.integral;
    Iout = Iout < GMYaw_Speedloop.IoutMax ? Iout : GMYaw_Speedloop.IoutMax;
    Iout = Iout > -GMYaw_Speedloop.IoutMax ? Iout : -GMYaw_Speedloop.IoutMax;

    Dout = GMYaw_Speedloop.Kd * (GMYaw_Speedloop.err - GMYaw_Speedloop.err_last);
    Dout = Dout < GMYaw_Speedloop.DoutMax ? Dout : GMYaw_Speedloop.DoutMax;
    Dout = Dout > -GMYaw_Speedloop.DoutMax ? Dout : -GMYaw_Speedloop.DoutMax;

    GMYaw_Speedloop.Out = Pout + Iout + Dout;
    GMYaw_Speedloop.Out = GMYaw_Speedloop.Out < GMYaw_Speedloop.OutMax ? GMYaw_Speedloop.Out : GMYaw_Speedloop.OutMax;
    GMYaw_Speedloop.Out = GMYaw_Speedloop.Out > -GMYaw_Speedloop.OutMax ? GMYaw_Speedloop.Out : -GMYaw_Speedloop.OutMax;


}
int16_t* CloudMotor_Out(void)//将任务延后到发射任务时发出
{
		CloudOut[0] = GMYaw_Speedloop.Out;
		CloudOut[1] = 0;
		return CloudOut;
}
